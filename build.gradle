plugins {
	id 'net.minecraftforge.gradle' version '5.1.+'
}

group = 'me.reeza.sepia'
version = '0.1'

java {
	archivesBaseName = 'sepia'
	toolchain.languageVersion = JavaLanguageVersion.of(17)
}

minecraft {
	mappings channel: 'official', version: '1.19.2'
//	accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

	runs {
		client {
			workingDirectory project.file('run')
			property 'forge.logging.markers', 'REGISTRIES'
			property 'forge.logging.console.level', 'debug'
			property 'forge.enabledGameTestNamespaces', 'sepia'

			mods {
				sepia {
					source sourceSets.main
				}
			}
		}

		server {
			workingDirectory project.file('run')
			property 'forge.logging.markers', 'REGISTRIES'
			property 'forge.logging.console.level', 'debug'
			property 'forge.enabledGameTestNamespaces', 'sepia'

			mods {
				sepia {
					source sourceSets.main
				}
			}
		}

		gameTestServer {
			workingDirectory project.file('run')
			property 'forge.logging.markers', 'REGISTRIES'
			property 'forge.logging.console.level', 'debug'
			property 'forge.enabledGameTestNamespaces', 'sepia'

			mods {
				sepia {
					source sourceSets.main
				}
			}
		}

		data {
			workingDirectory project.file('run')
			property 'forge.logging.markers', 'REGISTRIES'
			property 'forge.logging.console.level', 'debug'
			args '--mod', 'sepia', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

			mods {
				sepia {
					source sourceSets.main
				}
			}
		}
	}
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {

}

dependencies {
	minecraft 'net.minecraftforge:forge:1.19.2-43.1.34'
}

jar {
	manifest {
		attributes([
				"Specification-Title"     : "sepia",
				"Specification-Vendor"    : "ReezaVT",
				"Specification-Version"   : "1",
				"Implementation-Title"    : project.name,
				"Implementation-Version"  : project.jar.archiveVersion,
				"Implementation-Vendor"   : "ReezaVT",
				"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
		])
	}
}

jar.finalizedBy('reobfJar')

tasks.withType(JavaCompile).configureEach {
	options.encoding = 'UTF-8'
}
